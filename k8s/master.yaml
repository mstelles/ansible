- name: configure k8s master node
  hosts: k8smaster
  become: yes
  gather_facts: no
  vars:
    ports:
      - 6443/tcp
      - 2379-2380/tcp
      - 10250/tcp
      - 10251/tcp
      - 10252/tcp
      - 10255/tcp
    home: "/home/marcelo"
    owner: "marcelo"
  tasks:
    - name: set hostname
      hostname: 
        name: k8smaster
    - name: set /etc/hosts
      template:
        src: "./templates/hosts.j2"
        dest: "/etc/hosts"
    - name: minor adjustments to /etc/bashrc
      lineinfile:
        path: /etc/bashrc
        insertbefore: '^# vim:ts=4:sw=4'
        state: present
        line: 'set -o vi'
    - name: set net.bridge.bridge-nf-call-iptables to 1
      lineinfile:
        path: /etc/sysctl.conf
        line: "net.bridge.bridge-nf-call-iptables = 1"
        state: present
    - name: disable swap
      command: "swapoff -a"        
    - name: install yum-utils
      yum:
        name: yum-utils
        state: latest
    - name: add docker repo
      command: yum-config-manager --add-repo https://download.docker.com/linux/centos/docker-ce.repo
    - name: install docker
      yum:
        name: 
          - docker-ce-19.03.13
          - docker-ce-cli-19.03.13
          - containerd.io
        state: latest
    - name: set docker cgroupfs to use systemd driver
      lineinfile:
        path: /usr/lib/systemd/system/docker.service
        regexp: "^ExecStart=/usr/bin/dockerd"
        line: "ExecStart=/usr/bin/dockerd -H fd:// --containerd=/run/containerd/containerd.sock {{ '--exec-opt native.cgroupdriver=systemd' | join ('')}}"
    - name: enable and start docker
      service:
        name: docker
        state: started
        enabled: true
    - name: set SELinux as permissive
      selinux:
        policy: targeted
        state: permissive
    - name: adjust SELinux config
      lineinfile:
        path: /etc/selinux/config
        regexp: "^SELINUX="
        line: "SELINUX=permissive"
    - name: setup firewalld
      firewalld:
        port: "{{ item }}"
        permanent: yes
        immediate: yes
        state: enabled
      with_items: "{{ ports }}"
    - name: create k8s repo file
      template:
        src: "./templates/k8s.repo.j2"
        dest: "/etc/yum.repos.d/kubernetes.repo"
    - name: install k8s packages
      yum:
        name:
          - kubelet-1.19.0
          - kubeadm-1.19.0
          - kubectl-1.19.0
        state: latest
        disable_excludes: kubernetes
    - name: create the cluster with kubeadm
      command: "kubeadm init --pod-network-cidr=10.244.0.0/16"
    - name: create {{home}}/.kube dir
      file:
        state: directory
        path: "{{home}}/.kube"
        owner: "{{owner}}"
        group: "{{owner}}"
    - name: copy kubeconfig
      copy:
        remote_src: yes
        src: /etc/kubernetes/admin.conf
        dest: "{{home}}/.kube/config"
        owner: "{{owner}}"
        group: "{{owner}}"
    - name: setup pod network
      become_user: marcelo
      command: kubectl apply -f https://raw.githubusercontent.com/coreos/flannel/master/Documentation/kube-flannel.yml
    - name: generate join file
      shell: 'kubeadm token create --print-join-command > /tmp/worker_join_command.sh'
    - name: get te worker_join_command.sh file
      fetch:
        src: /tmp/worker_join_command.sh
        dest: ./scripts/
        flat: yes